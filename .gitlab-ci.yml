image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  IMAGE_BACKEND_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-backend
  IMAGE_UI_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-ui
  APP_VERSION: $CI_COMMIT_REF_SLUG-$CI_COMMIT_REF_SLUG

stages:
  - build-backend
  - build-ui
  - deploy

maven-build:
  stage: build-backend
  image: maven:3.9.9-eclipse-temurin-21-alpine
  script:
    - mvn -f app-demo-api/ clean package -DskipTests
  artifacts:
    paths:
      - modules/app-demo-api/target/*.jar
  only:
    - main

docker-build-backend:
  stage: build-backend
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login registry.gitlab.com -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - echo "Building Docker image..."
    - docker build -t $IMAGE_BACKEND_NAME -f Dockerfile-backend .
    - echo "Docker image built and tagged as $IMAGE_BACKEND_NAME"
    - docker push $IMAGE_BACKEND_NAME
  needs:
    - maven-build
  only:
    - main

npm-build:
  stage: build-ui
  image: node:18
  before_script:
    - cd app-demo-ui
  script:
    - npm i --f
    - npm run build --prod
  artifacts:
    paths:
      - app-demo-ui/dist
      - app-demo-ui/cpt_nginx.conf
  only:
    - main

docker-build-ui:
  stage: build-ui
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login registry.gitlab.com -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - ls -la app-demo-ui/dist/app-demo-ui
  script:
    - echo "Building Docker image for UI..."
    - docker build -f Dockerfile-ui -t $IMAGE_UI_NAME .
    - echo "Docker image for UI built and tagged as $IMAGE_UI_NAME"
    - docker push $IMAGE_UI_NAME
  needs:
    - npm-build
  only:
    - main

deploy:
  stage: deploy
  image: mcr.microsoft.com/azure-cli:latest
  before_script:
    - echo "Installing kubectl..."
    - az aks install-cli
    - echo "Logging in to Azure..."
    - az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
    - echo "Getting AKS credentials..."
    - az aks get-credentials --resource-group CapacityPlanningTool_RG --name CPT
    - |
      if ! kubectl get secret gitlab-registry-secret > /dev/null 2>&1; 
      then kubectl create secret docker-registry gitlab-registry-secret  --docker-server=registry.gitlab.com  --docker-username=$CI_REGISTRY_USER --docker-password=$CI_REGISTRY_PASSWORD  --docker-email=$GITLAB_USER_EMAIL 
      else
       echo "Secret 'gitlab-registry-secret' already exists, skipping creation."
      fi
  script:
    - echo "Deploying backend..."
    - kubectl apply -f deployment-backend.yaml
    - kubectl set image deployment/app-demo-api app-demo-api=$IMAGE_BACKEND_NAME
    - kubectl rollout status deployment/app-demo-api
    - echo "Deploying frontend..."
    - kubectl apply -f deployment-ui.yaml
    - kubectl set image deployment/app-demo-ui app-demo-ui=$IMAGE_UI_NAME
    - kubectl rollout status deployment/app-demo-ui
  needs:
    - docker-build-backend
    - docker-build-ui
  only:
    - main